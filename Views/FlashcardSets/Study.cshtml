@model assignment4.Models.FlashcardSet

@{
    ViewData["Title"] = "Study";
}

<h1 class="text-center">Study</h1>

<div>
    <hr />
    <div class="text-center">
        <h2>@Model.Name</h2>
        <h3 class="lead">
            @Model.Category</h3>
            <p>@Model.Description</p>
    </div>
</div>

<body onload="updateViewCount()">
    @if (Model.Flashcards != null && Model.Flashcards.Count > 0)
    {
        <div class="d-flex">
            <div class="card mx-auto">
                <div class="card-body"  onclick="flipFlashcard()">
                        <h5 class="card-title" id="flashcardFront">@Model.Flashcards[0].Front</h5>
                        <h5 class="card-text d-none" id="flashcardBack">@Model.Flashcards[0].Back</h5>
                    </div>
            </div>
        </div>
        <div class="text-center">
            @if (Model.Flashcards.Count > 1)
            {
                <button class="arrow-btn prev" onclick="previousFlashcard()"></button>
                <button class="arrow-btn next" onclick="nextFlashcard()"></button>
            }
            <div class="frontOrBack" id="label">Front of card</div>
            <div class="card-count">
                <p id="cardNumber">1</p>
                <p>/</p>
                <p id="totalCardNumber">@Model.Flashcards.Count</p>
            </div>
            <button class="btn btn-dark" onclick="chatGPT()">Ask ChatGPT</button>
            <div id="chatgpt-response-area">

            </div>
        </div>
    }
    <div class="text-center" style="margin-top: 0.5rem;">
        @if (User.IsInRole("Teacher"))
        {
            <a asp-action="Edit" asp-route-id="@Model?.SetId" class="button">Edit</a>
        }
        <a asp-action="Index" class="button">Home</a>
        <a asp-controller="FlashcardSets" asp-action="Details" asp-route-id="@Model.SetId" class="button">Exit</a>
    </div>

    @{
        var serializerSettings = new Newtonsoft.Json.JsonSerializerSettings
            {
                ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Ignore
            };
        var flashcardsJson = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Flashcards, serializerSettings);
        var setJson = Newtonsoft.Json.JsonConvert.SerializeObject(Model, serializerSettings);
    }

    <style>
        .arrow-btn {
            background-color: #212529;
            color: #ffffff;
            border: none;
            border-radius: 80%;
            width: 60px;
            height: 60px;
            font-size: 30px;
            cursor: pointer;
            
        }
            .arrow-btn:hover {
                background-color: #333333;
            }

            .arrow-btn.prev:before {
                content: '\2190';
            }

            .arrow-btn.next:before {
                content: '\2192';
            }

        .card {
            width: 500px;
            height: 300px;
            background-color: white;
            border: 2px solid black;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
        }

        .card-body {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100%;
            cursor: pointer;
        }

        .card:hover {
            background-color: lightgrey;
        }

        .card-title,
        .card-text {
            text-align: center;
        }

        .btn {
            margin-top: 1rem;
            font-size: 20px;
            padding: 12px 24px;
        }


        .frontOrBack {
            margin-top: 0.5rem;
            font-size: 16px;
        }

        #cardNumber{
            margin-right: 5px;
        }

        #totalCardNumber{
            margin-left: 5px;
        }

        .card-count p {
            display: inline-block
        }

        .button {
            display: inline-block;
            background-image: linear-gradient(113.9deg, rgb(255, 128, 0) -4.5%, rgb(255, 150, 0) 98.8%);
            color: black;
            padding: 8px 16px;
            text-align: center;
            text-decoration: none;
            font-size: 16px;
            margin: 4px 2px;
            cursor: pointer;
            border-radius: 4px;
        }

        .button:hover {
                background-image: none;
                background-color: darkgrey;
                color: black;
        }
    </style>

    <script>
        var set = @Html.Raw(setJson);
        function updateViewCount() {
            const setId = set.SetId;
            fetch('/ViewCounts/Increment/', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ setId })
            })
        }

        var flashcards = @Html.Raw(flashcardsJson);
        var flashcardIndex = 0;
        var showingFront = true;

        function flipFlashcard() {
            var frontEl = document.querySelector("#flashcardFront");
            var backEl = document.querySelector("#flashcardBack");
            var labelEl = document.querySelector("#label");
            if (showingFront) {
                frontEl.classList.add("d-none");
                backEl.classList.remove("d-none");
                labelEl.innerHTML = "Back of card";
                showingFront = false;
            } else {
                backEl.classList.add("d-none");
                frontEl.classList.remove("d-none");
                labelEl.innerHTML = "Front of card";
                showingFront = true;
            }
        }

        function nextFlashcard() {
            var labelEl = document.querySelector("#label");
            flashcardIndex++;
            if (flashcardIndex >= flashcards.length) {
                flashcardIndex = 0;
            }
            document.querySelector("#flashcardFront").innerHTML = flashcards[flashcardIndex].Front;
            document.querySelector("#flashcardBack").innerHTML = flashcards[flashcardIndex].Back;
            labelEl.innerHTML = "Front of card";
            document.querySelector("#flashcardFront").classList.remove("d-none");
            document.querySelector("#flashcardBack").classList.add("d-none");

            updateCardNumber()
        }

        function previousFlashcard() 
        {
            var labelEl = document.querySelector("#label");
            flashcardIndex--;
            if (flashcardIndex < 0) {
                flashcardIndex = flashcards.length - 1;
            }
            document.querySelector("#flashcardFront").innerHTML = flashcards[flashcardIndex].Front;
            document.querySelector("#flashcardBack").innerHTML = flashcards[flashcardIndex].Back;
            labelEl.innerHTML = "Front of card";
            document.querySelector("#flashcardFront").classList.remove("d-none");
            document.querySelector("#flashcardBack").classList.add("d-none");

            updateCardNumber()
        }

        function updateCardNumber() 
        {
            var cardNumber = document.querySelector("#cardNumber");
            cardNumber.innerHTML = flashcardIndex + 1; // the + 1 is neeeded because the first card has an index of 0
        }

        function chatGPT() 
        {
            var searchTerm = 'Give me more information about the term: ' + flashcards[flashcardIndex].Front
            console.log('The prompt passed to ChatGPT is: ' + searchTerm)
            $('#chatgpt-response-area').html('<div class="spinner-border text-primary mt-3" role="status"><span class= "sr-only"></span></div>')

            $.ajax({
                type: "POST",
                url: "/OpenAI/AIResponse", // OpenAIController.cs
                data: {
                    prompt: searchTerm
                },
                success: function (response) {
                    $('#chatgpt-response-area').html("<p>" + response + "</p>")
                },
                error: function (xhr, status, error) {
                    console.log("An error occurred: " + error);
                    $('#chatgpt-response-area').html("<p>There was an error with ChatGPT :(</p>")
                }
            }); 

        }

    </script>

</body>
